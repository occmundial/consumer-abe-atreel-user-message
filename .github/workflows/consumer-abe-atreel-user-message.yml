name: consumer-abe-atreel-user-message
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  branch-naming-rules:
    name: branch-naming-rules
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-branch-name@master
        with:
          regex: '[0-9a-zA-Z /-]' # Regex the branch should match. This example enforces grouping
          allowed_prefixes: 'feature,stable,fix,hotfix' # All branches should start with the given prefix
          ignore: main,development # Ignore exactly matching branch names from convention
          min_length: 5 # Min length of the branch name
          max_length: 50 # Max length of the branch name

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: |
          go mod tidy
          go build -v ./main.go

  commits-count:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: commits-count
        uses: pax217/pr-commits-count@v2.0
        with:
          except-branches: 'main;master;release'

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Test
        run: |
          go mod tidy
          go test -v ./...
  lint:
    name: golang-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.51.1

          args: --config=golangci-lint.yml

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true